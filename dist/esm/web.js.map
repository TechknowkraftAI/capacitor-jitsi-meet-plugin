{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,kBAAmB,SAAQ,SAAS;IAC/C,aAAa;IACb,KAAK,CAAC,cAAc,CAAC,OAmBpB;QAGC,MAAM,IAAI,CAAC,WAAW,CAAC,kGAAkG,CAAC,CAAC;IAC7H,CAAC;IAAA,CAAC;IACF,aAAa;IACb,KAAK,CAAC,eAAe,CAAC,OAAY;QAChC,MAAM,IAAI,CAAC,WAAW,CAAC,kGAAkG,CAAC,CAAC;IAC7H,CAAC;IAAA,CAAC;CACH;AAED,MAAM,eAAe,GAAG,IAAI,kBAAkB,EAAE,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,CAAC","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { CustomJitsiMeetPlugin } from './definitions';\n\nexport class CustomJitsiMeetWeb extends WebPlugin implements CustomJitsiMeetPlugin {\n  // @ts-ignore\n  async joinConference(options: {\n    roomName: string;\n    url: string;\n    token?: string;\n    channelLastN?: string;\n    displayName?: string;\n    subject?: string;\n    email?: string;\n    avatarURL?: string;\n    startWithAudioMuted?: boolean;\n    startWithVideoMuted?: boolean;\n    chatEnabled?: boolean;\n    inviteEnabled?: boolean;\n    callIntegrationEnabled?: boolean;\n    recordingEnabled?: boolean;\n    liveStreamingEnabled?: boolean;\n    screenSharingEnabled?: boolean;\n    featureFlags?: any;\n    configOverrides?: any;\n  }): Promise<{\n      success?: boolean;\n  }> {\n    throw this.unavailable('the web implementation is not available. Please use Jitsi Meet API to implement Jitsi in web app');\n  };\n  // @ts-ignore\n  async leaveConference(options?: {}): Promise<{ success?: boolean; }> {\n    throw this.unavailable('the web implementation is not available. Please use Jitsi Meet API to implement Jitsi in web app');\n  };\n}\n\nconst CustomJitsiMeet = new CustomJitsiMeetWeb();\n\nexport { CustomJitsiMeet };\n"]}